/*
 * Duplicidade de funções/procedimentos (sobrecarga)
 */

const {
    int constante = 5;
}

procedure constante() {} // Erro. Uma função/procedimento não pode possuir o mesmo nome que uma variável.

procedure teste() {}

procedure p(int a) {}

procedure p(string a, real b) {}

procedure p(real a, int b) {}

procedure teste() {} // Erro. Já existe 

procedure p(int x, real y) {}

function int f() { return 1; }

function real f() { return 1.1; } // Erro de duplicidade. Além de erro no retorno, já que a função já cadastrada na tabela de símbolos retorna um inteiro.

function boolean f(real a) { return false; }

function int f(real a) { return 1; } // Erro. já existe f(real). Além de erro no retorno, já que a função já cadastrada na tabela de símbolos retorna um boolean.

function string f(string a) { return ""; }

function real f() { return 1.2; } // Erro. já existe f() e erro no retorno, pois já existe outro na tabela de símbolos.

function string f(real a) { return "test"; } // Erro. Já existe f(real)

procedure start() {}

procedure start() {} //erro eof
