/*
 * Arquivo sem erros
 */

struct Carro {
	var
		{
			string cor;
		}
}

struct Focus extends struct Carro {
	var
		{
			int cim;
			boolean aff;
		}
}

struct Teste {
	var
		{
			int b;
			int ba;
			struct Focus fff;
		}
}


const
{
	int teste, cinco = 5;
	int a[2][2] = {a, b}, {c, d};
	int oxe = 9;
	int outroArray[] = 5;
}
var
{
	int b;
	real numero_real;
	real numero_real2;
	int inteiro;
	int absc;
	real id;
	real situacao;
	real ux;
	struct Teste qo;
	struct Teste agora;
	typedef int tipoInteiro;
	typedef struct Teste tipoTeste;
	tipoInteiro oitenta;
	int testedoEscopo;
	int algo[][];
}

procedure oxe1()
{
	var
	{
		int oxe2;
		int aa;
	}
	
	print();
	global.inteiro = 1;
	local.aa = 1;
}

procedure oxe1(int a)
{
	var
	{
		int aa;
	}
	
	print();
	global.inteiro = 1;
	local.aa = 1;
}

function int oxe1(int b3, int b4, int b5, int b6)
{
	var
	{
		int aa;
	}
	
	print();
	global.inteiro = 1;
	local.aa = 1;

	return aa + b4;
}

function int oxe1(int bbb, real c, real b)
{
	var
	{
		int aa;
	}
	bbb = 5;
	print();
	global.inteiro = 1;
	local.aa = 1;

	return 5;
}

function int oxe1(int bbb, Focus c, int b4, int cccc)
{
	return 5;
}

function int funcaoo( real b, int b34, int ba082)
{
	var
	{
		int aa;
	}
	print();
	global.inteiro = 1;
	local.aa = 1;

	return 2;
}

function int outra( int b, int aaaaa,int f2)
{
	var
	{
		int aa;
		int c;
	}
	print();
	global.inteiro = 1;
	local.aa = 1;

	return b + aaaaa + local.c;
}

procedure start()
{
	var
	{
		int ux;
		real coisa;
		int id;
		int ue;
		int agora;
		boolean neto;
		struct Teste algo;
		struct Teste agoranao;
		struct Teste testeDoTipo;
		typedef struct Teste sim;
		int arrayzinho[];
		sim testeTypedefStruct;
	}
	testedoEscopo = 5;
	oitenta = 5;
	ux = outra(184 + 948+ local.ux, 5 *3 + outra(outra(2,2,2),5,2),3);
	print();
	global.agora.ba = 5;
	global.agora.fff.cim = 5;
	global.agora.fff.aff = true || false;
	global.inteiro = 1;
	agoranao.ba = 5;
	local.ux = local.id +  oxe1(funcaoo(global.situacao, ux + global.agora.ba, outra(ux, ux, ux)), ue, ue, ue) + 1/3 + 9 * 3 * ( 5 * (35*4) + 6);
	ux = 1;
	ux = local.ux;
	global.ux = 5.5 + 3.3;
	ux = oxe1(ux,ux,ux,ux) + algo.ba;
	ux = oxe1(algo.ba, global.agora.fff, 3, 5*3);
	ux = ux + 2;
	global.algo[5] = 5;
	arrayzinho[5] = 5;
	ux = 5;
	global.b = 5;
	ux = arrayzinho[2];
	oxe1(6);
	oxe1(6, 5+9*8, 2, arrayzinho[2] + 5);
	ux = oxe1(6, 5+9*8, 2, 3);
	ux = local.arrayzinho[2] + 9;
}